/*
https://github.com/mzusin/heap
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var f=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var L=Object.prototype.hasOwnProperty;var d=(r,n)=>{for(var e in n)f(r,e,{get:n[e],enumerable:!0})},V=(r,n,e,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let l of k(n))!L.call(r,l)&&l!==e&&f(r,l,{get:()=>n[l],enumerable:!(t=K(n,l))||t.enumerable});return r};var w=r=>V(f({},"__esModule",{value:!0}),r);var D={};d(D,{HeapType:()=>h,findKthLargestValue:()=>v,findKthLargestValueNaive:()=>N,findKthSmallestValue:()=>z,findKthSmallestValueNaive:()=>T,findTopKLargestElements:()=>S,findTopKSmallestElements:()=>C,maxHeap:()=>c,minHeap:()=>b});module.exports=w(D);var i=(r,n)=>{let e=[],t=()=>e.length,l=()=>e,a=o=>{if(t()<=1)return;let u=Math.floor((o-1)/2);switch(r){case 1:{e[u]>e[o]&&([e[u],e[o]]=[e[o],e[u]],a(u));break}case 2:{e[u]<e[o]&&([e[u],e[o]]=[e[o],e[u]],a(u));break}}},H=o=>{let u=t(),p=o,m=2*o+1,s=m+1;switch(r){case 1:{m<u&&e[m]<e[p]&&(p=m),s<u&&e[s]<e[p]&&(p=s);break}case 2:{m<u&&e[m]>e[p]&&(p=m),s<u&&e[s]>e[p]&&(p=s);break}}o!==p&&([e[o],e[p]]=[e[p],e[o]],H(p))},x=o=>(e.push(o),a(e.length-1),g()),M=o=>{for(let u=0;u<o.length;u++)x(o[u])},E=()=>{if(t()<=0)return null;let o=e[0];return e[0]=e[t()-1],e.pop(),H(0),o},g=()=>t()>0?e[0]:null,I=o=>{let u=t();return o>=Math.floor(u/2)&&o<u};return n&&M(n),{add:x,addList:M,poll:E,peek:g,size:t,isLeaf:I,values:l}};var h=(e=>(e[e.MinHeap=1]="MinHeap",e[e.MaxHeap=2]="MaxHeap",e))(h||{}),c=r=>i(2,r),b=r=>i(1,r),S=(r,n)=>{if(n<0)return[];let e=[],t=c(r);for(let l=0;l<n;l++){let a=t.poll();if(a===null)break;e.push(a)}return e},C=(r,n)=>{if(n<0)return[];let e=[],t=b(r);for(let l=0;l<n;l++){let a=t.poll();if(a===null)break;e.push(a)}return e};var N=(r,n)=>{var e;return(e=r.sort((t,l)=>l-t)[n-1])!=null?e:null},T=(r,n)=>{var e;return(e=r.sort((t,l)=>t-l)[n-1])!=null?e:null},v=(r,n)=>{if(n<0)return null;let e=c(r);for(let t=0;t<n-1&&e.poll()!==null;t++);return e.peek()},z=(r,n)=>{if(n<0)return null;let e=b(r);for(let t=0;t<n-1&&e.poll()!==null;t++);return e.peek()};0&&(module.exports={HeapType,findKthLargestValue,findKthLargestValueNaive,findKthSmallestValue,findKthSmallestValueNaive,findTopKLargestElements,findTopKSmallestElements,maxHeap,minHeap});
