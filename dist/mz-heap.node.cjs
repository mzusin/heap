/*
https://github.com/mzusin/heap
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var c=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var L=Object.prototype.hasOwnProperty;var d=(r,n)=>{for(var e in n)c(r,e,{get:n[e],enumerable:!0})},w=(r,n,e,o)=>{if(n&&typeof n=="object"||typeof n=="function")for(let u of K(n))!L.call(r,u)&&u!==e&&c(r,u,{get:()=>n[u],enumerable:!(o=x(n,u))||o.enumerable});return r};var C=r=>w(c({},"__esModule",{value:!0}),r);var D={};d(D,{HeapType:()=>b,findKthLargestValue:()=>S,findKthSmallestValue:()=>T,findTopKLargestElements:()=>V,findTopKSmallestElements:()=>z,maxHeap:()=>i,minHeap:()=>h});module.exports=C(D);var f=(r,n)=>{let e=[],o=()=>e.length,u=()=>e,a=t=>{if(o()<=1)return;let l=Math.floor((t-1)/2);switch(r){case 1:{e[l]>e[t]&&([e[l],e[t]]=[e[t],e[l]],a(l));break}case 2:{e[l]<e[t]&&([e[l],e[t]]=[e[t],e[l]],a(l));break}}},H=t=>{let l=o(),p=t,s=2*t+1,m=s+1;switch(r){case 1:{s<l&&e[s]<e[p]&&(p=s),m<l&&e[m]<e[p]&&(p=m);break}case 2:{s<l&&e[s]>e[p]&&(p=s),m<l&&e[m]>e[p]&&(p=m);break}}t!==p&&([e[t],e[p]]=[e[p],e[t]],H(p))},M=t=>(e.push(t),a(e.length-1),I()),E=t=>{for(let l=0;l<t.length;l++)M(t[l])},g=()=>{if(o()<=0)return null;let t=e[0];return e[0]=e[o()-1],e.pop(),H(0),t},I=()=>o()>0?e[0]:null,k=t=>{let l=o();return t>=Math.floor(l/2)&&t<l};return n&&E(n),{add:M,addList:E,poll:g,peek:I,size:o,isLeaf:k,values:u}};var b=(e=>(e[e.MinHeap=1]="MinHeap",e[e.MaxHeap=2]="MaxHeap",e))(b||{}),i=r=>f(2,r),h=r=>f(1,r),S=(r,n)=>{if(n<0)return null;let e=i(r);for(let o=0;o<n-1&&e.poll()!==null;o++);return e.peek()},T=(r,n)=>{if(n<0)return null;let e=h(r);for(let o=0;o<n-1&&e.poll()!==null;o++);return e.peek()},V=(r,n)=>{if(n<0)return[];let e=[],o=i(r);for(let u=0;u<n;u++){let a=o.poll();if(a===null)break;e.push(a)}return e},z=(r,n)=>{if(n<0)return[];let e=[],o=h(r);for(let u=0;u<n;u++){let a=o.poll();if(a===null)break;e.push(a)}return e};0&&(module.exports={HeapType,findKthLargestValue,findKthSmallestValue,findTopKLargestElements,findTopKSmallestElements,maxHeap,minHeap});
