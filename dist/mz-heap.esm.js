/*
https://github.com/mzusin/heap
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var b=(t,r)=>{let e=[],n=()=>e.length,u=()=>e,m=o=>{if(n()<=1)return;let l=Math.floor((o-1)/2);switch(t){case 1:{e[l]>e[o]&&([e[l],e[o]]=[e[o],e[l]],m(l));break}case 2:{e[l]<e[o]&&([e[l],e[o]]=[e[o],e[l]],m(l));break}}},c=o=>{let l=n(),p=o,a=2*o+1,s=a+1;switch(t){case 1:{a<l&&e[a]<e[p]&&(p=a),s<l&&e[s]<e[p]&&(p=s);break}case 2:{a<l&&e[a]>e[p]&&(p=a),s<l&&e[s]>e[p]&&(p=s);break}}o!==p&&([e[o],e[p]]=[e[p],e[o]],c(p))},h=o=>(e.push(o),m(e.length-1),g()),H=o=>{for(let l=0;l<o.length;l++)h(o[l])},d=()=>{if(n()<=0)return null;let o=e[0];return e[0]=e[n()-1],e.pop(),c(0),o},g=()=>n()>0?e[0]:null,K=o=>{let l=n();return o>=Math.floor(l/2)&&o<l};return r&&H(r),{add:h,addList:H,poll:d,peek:g,size:n,isLeaf:K,values:u}};var x=(e=>(e[e.MinHeap=1]="MinHeap",e[e.MaxHeap=2]="MaxHeap",e))(x||{}),i=t=>b(2,t),f=t=>b(1,t),L=(t,r)=>{if(r<0)return[];let e=[],n=i(t);for(let u=0;u<r;u++){let m=n.poll();if(m===null)break;e.push(m)}return e},V=(t,r)=>{if(r<0)return[];let e=[],n=f(t);for(let u=0;u<r;u++){let m=n.poll();if(m===null)break;e.push(m)}return e};var k=(t,r)=>{var e;return(e=t.sort((n,u)=>u-n)[r-1])!=null?e:null},w=(t,r)=>{var e;return(e=t.sort((n,u)=>n-u)[r-1])!=null?e:null},z=(t,r)=>{if(r<0||r>=t.length)return null;let e=i(t);for(let n=0;n<r-1&&e.poll()!==null;n++);return e.peek()},C=(t,r)=>{if(r<0||r>=t.length)return null;let e=f(t);for(let n=0;n<r-1&&e.poll()!==null;n++);return e.peek()},T=(t,r)=>{if(r<0||r>=t.length)return null;let e=f();for(let n=0;n<t.length;n++)e.add(t[n]),e.size()>r&&e.poll();return e.peek()},D=(t,r)=>{if(r<0||r>=t.length)return null;let e=i();for(let n=0;n<t.length;n++)e.add(t[n]),e.size()>r&&e.poll();return e.peek()};export{x as HeapType,T as findKthLargestValue,k as findKthLargestValueNaive,z as findKthLargestValueNaive1,D as findKthSmallestValue,w as findKthSmallestValueNaive,C as findKthSmallestValueNaive1,L as findTopKLargestElements,V as findTopKSmallestElements,i as maxHeap,f as minHeap};
