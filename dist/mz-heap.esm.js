/*
https://github.com/mzusin/heap
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var c=(o,u)=>{let e=[],r=()=>e.length,l=()=>e,a=n=>{if(r()<=1)return;let t=Math.floor((n-1)/2);switch(o){case 1:{e[t]>e[n]&&([e[t],e[n]]=[e[n],e[t]],a(t));break}case 2:{e[t]<e[n]&&([e[t],e[n]]=[e[n],e[t]],a(t));break}}},i=n=>{let t=r(),p=n,m=2*n+1,s=m+1;switch(o){case 1:{m<t&&e[m]<e[p]&&(p=m),s<t&&e[s]<e[p]&&(p=s);break}case 2:{m<t&&e[m]>e[p]&&(p=m),s<t&&e[s]>e[p]&&(p=s);break}}n!==p&&([e[n],e[p]]=[e[p],e[n]],i(p))},h=n=>(e.push(n),a(e.length-1),x()),H=n=>{for(let t=0;t<n.length;t++)h(n[t])},g=()=>{if(r()<=0)return null;let n=e[0];return e[0]=e[r()-1],e.pop(),i(0),n},x=()=>r()>0?e[0]:null,E=n=>{let t=r();return n>=Math.floor(t/2)&&n<t};return u&&H(u),{add:h,addList:H,poll:g,peek:x,size:r,isLeaf:E,values:l}};var M=(e=>(e[e.MinHeap=1]="MinHeap",e[e.MaxHeap=2]="MaxHeap",e))(M||{}),b=o=>c(2,o),f=o=>c(1,o),L=(o,u)=>{if(u<0)return[];let e=[],r=b(o);for(let l=0;l<u;l++){let a=r.poll();if(a===null)break;e.push(a)}return e},d=(o,u)=>{if(u<0)return[];let e=[],r=f(o);for(let l=0;l<u;l++){let a=r.poll();if(a===null)break;e.push(a)}return e};var S=(o,u)=>{var e;return(e=o.sort((r,l)=>l-r)[u-1])!=null?e:null},C=(o,u)=>{var e;return(e=o.sort((r,l)=>r-l)[u-1])!=null?e:null},N=(o,u)=>{if(u<0)return null;let e=b(o);for(let r=0;r<u-1&&e.poll()!==null;r++);return e.peek()},T=(o,u)=>{if(u<0)return null;let e=f(o);for(let r=0;r<u-1&&e.poll()!==null;r++);return e.peek()};export{M as HeapType,N as findKthLargestValue,S as findKthLargestValueNaive,T as findKthSmallestValue,C as findKthSmallestValueNaive,L as findTopKLargestElements,d as findTopKSmallestElements,b as maxHeap,f as minHeap};
