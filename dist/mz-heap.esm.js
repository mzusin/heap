/*
https://github.com/mzusin/heap
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var c=(o,u)=>{let e=[],t=()=>e.length,p=()=>e,a=r=>{if(t()<=1)return;let n=Math.floor((r-1)/2);switch(o){case 1:{e[n]>e[r]&&([e[n],e[r]]=[e[r],e[n]],a(n));break}case 2:{e[n]<e[r]&&([e[n],e[r]]=[e[r],e[n]],a(n));break}}},i=r=>{let n=t(),l=r,m=2*r+1,s=m+1;switch(o){case 1:{m<n&&e[m]<e[l]&&(l=m),s<n&&e[s]<e[l]&&(l=s);break}case 2:{m<n&&e[m]>e[l]&&(l=m),s<n&&e[s]>e[l]&&(l=s);break}}r!==l&&([e[r],e[l]]=[e[l],e[r]],i(l))},h=r=>(e.push(r),a(e.length-1),x()),H=r=>{for(let n=0;n<r.length;n++)h(r[n])},g=()=>{if(t()<=0)return null;let r=e[0];return e[0]=e[t()-1],e.pop(),i(0),r},x=()=>t()>0?e[0]:null,E=r=>{let n=t();return r>=Math.floor(n/2)&&r<n};return u&&H(u),{add:h,addList:H,poll:g,peek:x,size:t,isLeaf:E,values:p}};var M=(e=>(e[e.MinHeap=1]="MinHeap",e[e.MaxHeap=2]="MaxHeap",e))(M||{}),b=o=>c(2,o),f=o=>c(1,o),L=(o,u)=>{if(u<0)return[];let e=[],t=b(o);for(let p=0;p<u;p++){let a=t.poll();if(a===null)break;e.push(a)}return e},d=(o,u)=>{if(u<0)return[];let e=[],t=f(o);for(let p=0;p<u;p++){let a=t.poll();if(a===null)break;e.push(a)}return e};var S=(o,u)=>o.sort((e,t)=>t-e)[u-1],C=(o,u)=>o.sort((e,t)=>e-t)[u-1],N=(o,u)=>{if(u<0)return null;let e=b(o);for(let t=0;t<u-1&&e.poll()!==null;t++);return e.peek()},T=(o,u)=>{if(u<0)return null;let e=f(o);for(let t=0;t<u-1&&e.poll()!==null;t++);return e.peek()};export{M as HeapType,N as findKthLargestValue,S as findKthLargestValueNaive,T as findKthSmallestValue,C as findKthSmallestValueNaive,L as findTopKLargestElements,d as findTopKSmallestElements,b as maxHeap,f as minHeap};
